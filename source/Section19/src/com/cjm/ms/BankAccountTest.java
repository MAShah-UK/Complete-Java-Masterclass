package com.cjm.ms;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

/*
- Generated by pressing alt-enter on BankAccount class.
- Set JUnit to compile in Project Structure > Modules > Dependencies.
- You can run all test cases by clicking on the arrow next to the class name.
 */
class BankAccountTest {
    // Marks a test method. These methods are automatically
    // called at runtime. Test methods must be public void.
    @Test
    public void getBalance_deposit() { // Test cases should be descriptive.
        // Assertions.fail() automatically fails the test case.
        // fail("This test has yet to be implemented.");
        BankAccount account = new BankAccount("John", "Doe", 1000.00);
        account.deposit(200.00, true);
        assertEquals(1200.00, account.getBalance(), 0.001);
    }
    @Test
    public void getBalance_withdraw() {
        BankAccount account = new BankAccount("John", "Doe", 1000.00);
        account.withdraw(200.00, true);
        assertEquals(800.00, account.getBalance(), 0.001);
    }
    @Test
    void isChecking_true() {
        BankAccount account = new BankAccount("John", "Doe", 1000.00);
        // Boolean specific version of assertEquals().
        assertTrue(account.isChecking());
    }
    @Test
    public void deposit() {
        // fail("This test has yet to be implemented.");
        BankAccount account = new BankAccount("John", "Doe", 1000.00);
        double balance = account.deposit(200.00, true);
        // Assertions add constraints to specify what constitutes a pass.
        // In this case 1200 = balance.
        assertEquals(1200.00, balance, 0.001);
    }
    @Test
    public void withdraw() {
        fail("This test has yet to be implemented.");
    }
    /*
    @Test
    public void dummyTest() {
        // Can run this test case independently by clicking on the arrow next to the
        // test method. As such tests should run independent to other test cases.
        // assertEquals() passes if the arguments are equal, otherwise it fails.
        assertEquals(20, 21); // Fails because 20 != 21.
    }
    */
}